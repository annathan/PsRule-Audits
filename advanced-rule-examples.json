[
  {
    "id": "MFA-Simple-001",
    "title": "MFA enabled for user",
    "targetPath": "$.StrongAuthenticationRequirements[0].State",
    "evaluator": "equals",
    "expectedType": "string",
    "expectedValue": "Enforced",
    "evidencePath": "$.StrongAuthenticationRequirements",
    "severity": "high",
    "whyItMatters": "MFA reduces account takeover risk by requiring additional authentication factors.",
    "remediation": "Enable MFA for all user accounts in Azure AD."
  },
  {
    "id": "MFA-Composite-001",
    "title": "MFA properly configured with multiple methods",
    "logic": "AND",
    "conditions": [
      {
        "targetPath": "$.StrongAuthenticationRequirements[0].State",
        "evaluator": "equals",
        "expectedValue": "Enforced"
      },
      {
        "targetPath": "$.StrongAuthenticationMethods",
        "evaluator": "arrayLength>=1"
      }
    ],
    "evidencePath": "$.StrongAuthenticationRequirements",
    "severity": "high",
    "whyItMatters": "MFA must be both enabled and have multiple authentication methods configured for proper security.",
    "remediation": "Enable MFA and configure at least one authentication method."
  },
  {
    "id": "MFA-Dependent-001",
    "title": "MFA methods are phishing-resistant",
    "dependsOn": ["MFA-Methods-002"],
    "targetPath": "$.StrongAuthenticationMethods[*].MethodType",
    "evaluator": "contains",
    "expectedType": "array",
    "expectedValue": "AuthenticatorApp",
    "evidencePath": "$.StrongAuthenticationMethods",
    "severity": "medium",
    "whyItMatters": "Authenticator apps provide better security than SMS-based MFA.",
    "remediation": "Enable Microsoft Authenticator app as an MFA method for users."
  },
  {
    "id": "UPN-Custom-001",
    "title": "User Principal Name follows corporate pattern",
    "targetPath": "$.UserPrincipalName",
    "customEvaluator": "($_ -match '^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$')",
    "expectedType": "string",
    "evidencePath": "$.UserPrincipalName",
    "severity": "medium",
    "whyItMatters": "Valid UPN format ensures proper user identification and authentication.",
    "remediation": "Ensure all users have valid email-format User Principal Names."
  },
  {
    "id": "Complex-Composite-001",
    "title": "User account is fully compliant",
    "logic": "AND",
    "conditions": [
      {
        "targetPath": "$.AccountEnabled",
        "evaluator": "equals",
        "expectedValue": true
      },
      {
        "targetPath": "$.UserPrincipalName",
        "evaluator": "exists"
      },
      {
        "targetPath": "$.StrongAuthenticationRequirements[0].State",
        "evaluator": "equals",
        "expectedValue": "Enforced"
      }
    ],
    "evidencePath": "$",
    "severity": "high",
    "whyItMatters": "All critical account settings must be properly configured for security compliance.",
    "remediation": "Ensure account is enabled, has valid UPN, and MFA is enforced."
  },
  {
    "id": "OR-Logic-001",
    "title": "User has either admin role or MFA enabled",
    "logic": "OR",
    "conditions": [
      {
        "targetPath": "$.AssignedRoles",
        "evaluator": "arrayLength>=1"
      },
      {
        "targetPath": "$.StrongAuthenticationRequirements[0].State",
        "evaluator": "equals",
        "expectedValue": "Enforced"
      }
    ],
    "evidencePath": "$",
    "severity": "medium",
    "whyItMatters": "Users with admin roles should have MFA, or users without admin roles should have MFA for security.",
    "remediation": "Either remove admin roles or enable MFA for all users."
  },
  {
    "id": "Nested-Array-001",
    "title": "User has specific role assignment",
    "targetPath": "$.AssignedRoles[0].DisplayName",
    "evaluator": "exists",
    "expectedType": "string",
    "evidencePath": "$.AssignedRoles",
    "severity": "low",
    "whyItMatters": "Role assignments should be properly configured and visible.",
    "remediation": "Review and properly assign roles to users."
  },
  {
    "id": "Custom-Email-001",
    "title": "Email domain is from approved list",
    "targetPath": "$.UserPrincipalName",
    "customEvaluator": "($_ -split '@')[1] -in @('company.com', 'partner.com', 'vendor.com')",
    "expectedType": "string",
    "evidencePath": "$.UserPrincipalName",
    "severity": "medium",
    "whyItMatters": "Only approved email domains should be used for user accounts.",
    "remediation": "Ensure all user accounts use approved email domains."
  }
]
